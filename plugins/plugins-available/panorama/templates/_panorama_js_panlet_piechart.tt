Ext.define('TP.PanletPieChart', {
    extend: 'TP.Panlet',

    title:  'chart',
    width:  200,
    height: 200,
    initComponent: function() {
        var panel = this;
        this.callParent();
        this.xdata.showborder = false;
        this.xdata.showlabel  = true;

        this.pieStore = Ext.create('Ext.data.Store', {
            fields: ['name','data'],
            data:  [{name:' ', data: 100}]
        });

        this.loader = {
            autoLoad: false,
            renderer: 'data',
            scope:    this,
            url:      '',
            ajaxOptions: { method: 'POST' },
            loading:  false,
            listeners: {
                'beforeload': function(This, options, eOpts) {
                    if(this.loading) {
                        return false;
                    }
                    this.loading = true;
                    return true;
                }
            },
            callback: function(This, success, response, options) {
                This.loading = false;
                var data = TP.getResponse(this, response);
                if(data) {
                    var fields = [];
                    for(var key in data.columns) {
                        fields.push(data.columns[key].dataIndex);
                    }
                    this.pieStore = Ext.create('Ext.data.Store', {
                        data:  {'items': data.data },
                        fields: fields,
                        proxy: {
                            type: 'memory',
                            reader: {
                                type: 'json',
                                root: 'items'
                            }
                        }
                    });
                    this.chart.series.getAt(0).colorSet = data.colors;
                    this.chart.bindStore(this.pieStore);
                    if(this.chart.isVisible()) {
                        try { // this may fail when redrawing for the first time
                            this.chart.redraw();
                        } catch(e) { debug(e) }
                    }
                    this.setShowLabel();
                }
            }
        };

        var global = Ext.getCmp(this.panel_id);
        this.chart = Ext.create('Ext.chart.Chart', {
            xtype:  'chart',
            animate: true,
            store:   this.pieStore,
            shadow:  true,
            legend:  false,
            insetPadding: 3,
            theme:  'Base:gradients',
            panel:   this,
            series: [{
                type: 'pie',
                field: 'data',
                showInLegend: true,
                colorSet: [ '#00FF00' ],
                tips: {
                    trackMouse: true,
                    width: 140,
                    height: 28,
                    renderer: function(storeItem, item) {
                        var total = 0;
                        storeItem.store.each(function(rec) {
                            total += rec.get('data');
                        });
                        this.setTitle(storeItem.get('name') + ': ' + storeItem.get('data') + ' (' + Math.round(storeItem.get('data') / total * 100) + '%)');
                    }
                },
                highlight: {
                    segment: {
                        margin: 20
                    }
                },
                label: {
                    field: 'name',
                    display: 'rotate',
                    contrast: true,
                    font: '12px Arial'
                }
            }],
            listeners: {
                render: function(This, eOpts) {
                    var div   = This.getEl();
                    var panel = This.panel;
                    div.on("mouseout", function()  {
                        TP.timeouts['timeout_'+This.id+'_redraw'] = window.setTimeout(Ext.bind(function() {
                            panel.chart.redraw();
                            if(panel.xdata && panel.xdata.showborder == false) {
                                panel.getEl().disableShadow();
                            }
                        }, panel, []), 1000);
                    });
                    div.on("mouseover", function()  {
                        window.clearTimeout(TP.timeouts['timeout_'+This.id+'_redraw']);
                    });
                },
                destroy: function(This) {
                    window.clearTimeout(TP.timeouts['timeout_'+This.id+'_redraw']);
                },
                resize: function(This) {
                    This.panel.setShowLabel();
                }
            }
        });
        this.add(this.chart);

        this.addListener('beforerender', function() {
            this.refreshHandler();
        });
    },
    setShowLabel: function() {
        var panel = this;
        Ext.each(this.chart.getEl().query('text'), function(el) {
            if(panel.xdata.showlabel == false) {
                el.style.fill = 'transparent';
            } else {
                el.style.fill = '';
            }
        });
    },
    setGearItems: function() {
        var panel = this;
        this.callParent();
        this.addGearItems({
            fieldLabel: 'Show Border',
            xtype:      'checkbox',
            name:       'showborder'
        });
        this.addGearItems({
            fieldLabel: 'Show Label',
            xtype:      'checkbox',
            name:       'showlabel'
        });
    }
});
