Ext.define('TP.formFilter', {
    extend: 'Ext.panel.Panel',

    alias:  'widget.tp_filter',

    layout: {
        type: 'table',
        columns: 2
    },
    border: 0,
    items: [{
        xtype:      'textfield',
        name:       'name',
        value:      '',
        width:      100
    }, {
        xtype:     'button',
        text:      'Change Filter',
        icon:      '[% url_prefix %]thruk/plugins/panorama/images/image_edit.png',
        handler:   function() { TP.filterWindow(this.up('panel').ftype, this.up('panel').items.getAt(0)); }
    }],

    initComponent: function() {
        this.callParent();
        this.items.getAt(0).fieldLabel = this.fieldLabel;
        this.items.getAt(0).value      = this.value;
        this.items.getAt(0).name       = this.name;
        this.addListener('afterrender', function() {
            this.items.getAt(0).inputEl.hide();
        });
    }
});

Ext.define('TP.formFilterSelect', {
    extend: 'Ext.panel.Panel',

    alias:  'widget.tp_filter_select',

    border: false,
    layout:     {
            type: 'table',
            columns: 4,
            tableAttrs: {
                style: {
                    width: '100%'
                }
            }
    },
    items:      [{
        name:           'type',
        xtype:          'combobox',
        queryMode:      'local',
        editable:       false,
        triggerAction:  'all',
        forceSelection: true,
        autoSelect:     true,
        width:          140,
        value:          'Search',
        store:          ['Search',
                         'Check Period',
                         'Comment',
                         'Contact',
                         'Current Attempt',
                         'Custom Variable',
                         'Downtime Duration',
                         'Duration',
                         'Execution Time',
                         'Host',
                         'Hostgroup',
                         'Last Check',
                         'Latency',
                         'Next Check',
                         'Notification Period',
                         'Parent',
                         'Service',
                         'Servicegroup',
                         '% State Change']
    }, {
        name:           'op',
        xtype:          'combobox',
        queryMode:      'local',
        editable:       false,
        triggerAction:  'all',
        forceSelection: true,
        autoSelect:     true,
        width:          50,
        value:          '~',
        store:          ['~','!~','=','!=','<=','>=']
    }, {
        name:           'value',
        xtype:          'combobox',
        width:          130
    }, {
        xtype:      'panel',
        border:     false,
        html:       '<div align="center" class="clickable"><img src="[% url_prefix %]thruk/plugins/panorama/images/remove.png" alt="remove filter" style="vertical-align: middle"><\/div>',
        listeners:  {
            afterrender: function(This, eOpts) { This.body.on('click', function() {
                This.up('panel').destroy();
            })}
        }
    }],

    initComponent: function() {
        this.callParent();
    }
});

TP.filterWindow = function(ftype, base_el) {
    var win = Ext.create('Ext.window.Window', {
        title:      'Filter',
        layout:     'fit',
        modal:       true,
        maximizable: true,
        items: {
            xtype:  'form',
            bodyPadding: 3,
            items: [{
                    fieldLabel: 'Host Status Types',
                    name:       'hoststatustypes',
                    xtype:      'tp_combobox_sum',
                    width:      320,
                    submitEmptyText: false,
                    value:      [1,2,4,8],
                    sum_values: {'15': 'All', '12': 'All Problems' },
                    store:      [[2,'Up'], [4,'Down'], [8,'Unreachable'], [1,'Pending']]
                }, {
                    fieldLabel: 'Host Properties',
                    name:       'hostprops',
                    xtype:      'tp_combobox_sum',
                    width:      320,
                    columns:    true,
                    submitEmptyText: false,
                    value:      [],
                    sum_values: {'0': 'Any' },
                    store:      [[1,'In Scheduled Downtime'], [2,'Not In Scheduled Downtime'],
                                 [4,'Has Been Acknowledged'], [8,'Has Not Been Acknowledged'],
                                 [16,'Checks Disabled'], [32,'Checks Enabled'],
                                 [64,'Event Handler Disabled'], [128,'Event Handler Enabled'],
                                 [256,'Flap Detection Disabled'], [512,'Flap Detection Enabled'],
                                 [1024,'Is Flapping'], [2048,'Is Not Flapping'],
                                 [4096,'Notifications Disabled'], [8192,'Notifications Enabled'],
                                 [16384,'Passive Checks Disabled'], [32768,'Passive Checks Enabled'],
                                 [65536,'Passive Checks'], [131072,'Active Checks'],
                                 [262144,'In Hard State'], [524288,'In Soft State'],
                                 [1048576,'In Check Period'], [2097152,'Outside Check Period'],
                                 [4194304,'In Notification Period'], [8388608,'Outside Notification Period'],
                                 [16777216,'Has Modified Attributes'], [33554432,'No Modified Attributes']]
                }, {
                    fieldLabel: 'Service Status Types',
                    name:       'servicestatustypes',
                    xtype:      'tp_combobox_sum',
                    width:      320,
                    submitEmptyText: false,
                    value:      [1,2,4,8,16],
                    sum_values: {'31': 'All', '28': 'All Problems' },
                    store:      [[2,'Ok'],[4,'Warning'],[8,'Unknown'],[16,'Critical'],[1,'Pending']]
                }, {
                    fieldLabel: 'Service Properties',
                    name:       'serviceprops',
                    xtype:      'tp_combobox_sum',
                    width:      320,
                    columns:    true,
                    submitEmptyText: false,
                    value:      [],
                    sum_values: {'0': 'Any' },
                    store:      [[1,'In Scheduled Downtime'], [2,'Not In Scheduled Downtime'],
                                 [4,'Has Been Acknowledged'], [8,'Has Not Been Acknowledged'],
                                 [16,'Active Checks Disabled'], [32,'Active Checks Enabled'],
                                 [64,'Event Handler Disabled'], [128,'Event Handler Enabled'],
                                 [512,'Flap Detection Disabled'], [256,'Flap Detection Enabled'],
                                 [1024,'Is Flapping'], [2048,'Is Not Flapping'],
                                 [4096,'Notifications Disabled'], [8192,'Notifications Enabled'],
                                 [16384,'Passive Checks Disabled'], [32768,'Passive Checks Enabled'],
                                 [65536,'Passive Checks'], [131072,'Active Checks'],
                                 [262144,'In Hard State'], [524288,'In Soft State'],
                                 [1048576,'In Check Period'], [2097152,'Outside Check Period'],
                                 [4194304,'In Notification Period'], [8388608,'Outside Notification Period'],
                                 [16777216,'Has Modified Attributes'], [33554432,'No Modified Attributes']]
                }, {
                    xtype:      'tp_filter_select'
                }, {
                    xtype:      'panel',
                    border:     false,
                    html:       '<div align="center" class="clickable"><img src="[% url_prefix %]thruk/plugins/panorama/images/down.png" alt="add new filter" style="vertical-align: middle"> and<\/div>',
                    listeners:  {
                        afterrender: function(This, eOpts) { This.body.on('click', function() {
                            var form = This.up('form');
                            form.insert(form.items.length-1, {xtype: 'tp_filter_select'});
                        })}
                    }
            }],
            buttonAlign: 'center',
            fbar: [{ xtype:  'button', text: 'cancel', handler: function() { this.up('window').destroy() } },
                   { xtype:  'button',
                     text:    'save',
                     handler: function(This) {
                        var form = This.up('panel').getForm();
                        var vals = form.getFieldValues();
                        vals.hostprops          = TP.arraySum(vals.hostprops);
                        vals.serviceprops       = TP.arraySum(vals.serviceprops);
                        vals.hoststatustypes    = TP.arraySum(vals.hoststatustypes);
                        vals.servicestatustypes = TP.arraySum(vals.servicestatustypes);
                        base_el.setValue(Ext.JSON.encode(vals));
                        this.up('window').destroy();
                     }
            }]
        }
    });
    if(ftype == 'host') {
        win.items.getAt(0).items.getAt(2).hide();
        win.items.getAt(0).items.getAt(3).hide();
    }
    win.show();
}
