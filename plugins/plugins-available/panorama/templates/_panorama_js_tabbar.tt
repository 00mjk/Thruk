Ext.define('TP.TabBar', {
    extend: 'Ext.tab.Panel',

    id:             'tabpan',
    region:         'center',
    minTabWidth:    80,
    deferredRender: false,
    stateful:       true,
    tabBar:{
        items:[{ xtype: 'tbfill' },{
            title: '',
            closable: false,
            minWidth: 28,
            iconCls: 'gear-tab',
            menu: {
                items: [{
                        text: 'About',
                        icon: '[% url_prefix %]thruk/plugins/panorama/images/information.png',
                        handler: function() { TP.aboutWindow() }
                    }, {
                        text: 'Settings',
                        icon: '[% url_prefix %]thruk/plugins/panorama/images/cog.png',
                        handler: function(m, e) {
                            Ext.MessageBox.alert('TODO', 'No settings so far, suggestions welcome...');
                        }
                    }, '-', {
                        text:   'Core Performance Metrics',
                        icon:   '[% url_prefix %]thruk/plugins/panorama/images/table_lightning.png',
                        handler: function() { TP.add_panlet({type:'TP.PanletGridCoreMetrics'}) }
                    }, {
                        text:   'Host / Service Performance',
                        icon:   '[% url_prefix %]thruk/plugins/panorama/images/table_gear.png',
                        handler: function() { TP.add_panlet({type:'TP.PanletGridCheckMetrics'}) }
                    }, {
                        text:   'Logfile',
                        icon:   '[% url_prefix %]thruk/plugins/panorama/images/text_align_left.png',
                        handler: function() { TP.add_panlet({type:'TP.PanletGridLogs'}) }
                    }, {
                        text:   'Mod-Gearman Metrics',
                        icon:   '[% url_prefix %]thruk/plugins/panorama/images/server_connect.png',
                        handler: function() { TP.add_panlet({type:'TP.PanletGridGearmanMetrics'}) }
                    }, {
                        text:   'Mod-Gearman Charts',
                        icon:   '[% url_prefix %]thruk/plugins/panorama/images/chart_curve.png',
                        handler: function() { TP.add_panlet({type:'TP.PanletChartGearman'}) }
                    }, {
                        text:    'Generic Url Panlet',
                        icon:    '[% url_prefix %]thruk/plugins/panorama/images/html_add.png',
                        handler: function() { TP.add_panlet({type:'TP.PanletUrl'}) }
                    }, '-' , {
                        text:   'Exit Panorama View',
                        icon:   '[% url_prefix %]thruk/plugins/panorama/images/exit.png',
                        handler: function() {
                            window.location = '../';
                        }
                    }
                ]
            }
        }]
    },
    getState:   function() {
        var item_ids = [];
        this.items.each(function(item, idx, length) {
            var stateId = item.getStateId();
            if(stateId) {
                item_ids.push(stateId);
            }
        });
        return {
            item_ids:  item_ids,
            activeTab: this.items.indexOf(this.getActiveTab())
        }
    },
    applyState: function(state) {
        if(state) {
            for(nr in state.item_ids) {
                TP.add_pantab(state.item_ids[nr]);
            };
            this.setActiveTab(state.activeTab);
            Ext.apply(this, state);
        }
    },
    items: [{
        title: '',
        closable: false,
        iconCls: 'new-tab',
        tabConfig: {
            minWidth: 28
        },
        listeners: {
            beforeactivate: function() { return TP.add_pantab() }
        }
    }]
});
