Ext.BLANK_IMAGE_URL = '[% url_prefix %]thruk/plugins/panorama/images/s.gif';

/* send debug output to firebug console */
function debug(str) {
    if (window.console != undefined) {
        console.debug(str);
    }
}

/* global Thruk Panorama Object */
Ext.namespace("TP");
var TP = {
    snap_x: 20,
    snap_y: 20,

    get_snap: function (x, y) {
        newx = Math.round(x/TP.snap_x) * TP.snap_x;
        newy = Math.round(y/TP.snap_y) * TP.snap_y + 5;
        if(newy < 25) { newy = 25; }
        return([newx, newy]);
    },

    add_pantab: function(id) {
        var tabpan = Ext.getCmp('tabpan');
        var size   = tabpan.items.length;
        var nextid = this.getNextId("tabpan-tab", id);

        /* add new tab panel */
        tabpan.add(new TP.Pantab({id: nextid})).show();

        /* move new-tab button at the end */
        tabpan.getTabBar().move(size-1, size);

        /* make tab title editable */
        var tabhead = tabpan.getTabBar().items.getAt(size-1);
        tabhead.addListener('afterrender', function(This, eOpts) {
            el = This.getEl();
            el.on("dblclick", function() {
                Ext.Msg.prompt('Change Title', '', function(btn, text) {
                    if(btn == 'ok') {
                        Ext.getCmp(nextid).setTitle(text);
                    }
                }, undefined, undefined, tabhead.getText());
            });
        });

        /* return false to prevent newtab button being activated */
        return false;
    },

    add_panlet: function(config) {
        if(config.conf == undefined) {
            config.conf = {};
        }
        config.conf.id = this.getNextId("panlet", config.id);
        var state = cp.readValues();
        if(state[config.conf.id] != undefined
           && state[config.conf.id].xdata != undefined
           && state[config.conf.id].xdata.cls != undefined) {
            config.type = state[config.conf.id].xdata.cls;
        }
        if(config.type == undefined) {
            debug("add_panlet(): no type!");
            return false;
        }
        var pan = Ext.getCmp('tabpan');
        var tb  = pan.getActiveTab();
        var win = Ext.create(config.type, config.conf);
        win.panel_id = tb.id;
        if(!config.skip_state) {
            tb.window_ids.push(win.id);
            tb.saveState();
        }
        return true;
    },

    getNextId: function(prefix, id) {
        if(id != undefined) {
            return id;
        }
        var nr = 1;
        while(Ext.getCmp(prefix + "_" + nr) != undefined) {
            nr++;
        }
        return(prefix + "_" + nr);
    },

    removeFromList: function(list, item) {
        var newlist = [];
        for(var key in list) {
            if(list[key] != item) {
                newlist.push(list[key]);
            }
        }
        return(newlist);
    }
}
