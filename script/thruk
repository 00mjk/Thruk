#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;

my $options = {
    'verbose'  => 0,
    'backends' => [],
};
Getopt::Long::Configure('no_ignore_case');
Getopt::Long::Configure('bundling');
GetOptions (
   "h|help"             => \$options->{'help'},
   "v|verbose"          => \$options->{'verbose'},
   "r|remote-url=s"     => \$options->{'remoteurl'},
   "c|credential=s"     => \$options->{'credential'},
   "l|list-backends"    => \$options->{'listbackends'},
   "b|backend=s"        =>  $options->{'backends'},
   "u|url=s"            => \$options->{'url'},
   "a|auth=s"           => \$options->{'auth'},
) or pod2usage( { -verbose => 2, -message => 'error in options' } );

pod2usage( { -verbose => 2, -exit => 1 } ) if $options->{'help'};

$ENV{'REMOTE_USER'}     = $options->{'auth'} if defined $options->{'auth'};
$ENV{'THRUK_BACKENDS'}  = join(',', @{$options->{'backends'}}) if scalar @{$options->{'backends'}} > 0;
$ENV{'THRUK_VERBOSE'}   = $options->{'verbose'} if $options->{'verbose'};
$ENV{'THRUK_DEBUG'}     = $options->{'verbose'} if $options->{'verbose'};
$options->{'remoteurl'} = defined $ENV{'OMD_SITE'} ? 'http://localhost/'.$ENV{'OMD_SITE'}.'/thruk/cgi-bin/remote.cgi'
                                                   : 'http://localhost/thruk/cgi-bin/remote.cgi'
                          unless defined $options->{'remoteurl'};

use Thruk::Utils::CLI;
my $cli = Thruk::Utils::CLI->new($options);
exit $cli->_run();

1;

##############################################

=head1 NAME

thruk - Command Line Utility for Thruk Monitoring Gui

=head1 SYNOPSIS

thruk [ -h |--help ]
      [ -v | --verbose ]
      [ -a | --auth=<auth> ]
      [ -c | --credential=<credential> ]
      [ -r | --remote-url=<remote-url> ]
      [ -b | --backend=<backend> ]
      [ -l | --list-backends ]
      [ -u | --url=<url> ]

=head1 DESCRIPTION

This script gives access to various parts of the Thruk gui and allows to generate
excel reports, csv exports or any other url by using command line and bypassing the
webserver.

=head1 OPTIONS

script has the following arguments

=over 4

=item B<-h> , B<--help>

    print help and exit

=item B<-v> , B<--verbose>

    print verbose output too

=item B<-b> I<backend>, B<--backend>=I<backend>

    specify backend(s), otherwise the default backends will be
    used. Specify the key of the backend. Use <-l> to get a list
    of backends.

=item B<-r> I<remote-url>, B<--remote-url>=I<remote-url>

    Connect to this remote instance instead of the local one.
    Defaults to http://localhost/thruk/cgi-bin/remote.cgi.

=item B<-l> , B<--list-backends>

    get list of available backends

=item B<-a> I<authname>, B<--auth>=I<authname>

    use this username for authentication

=item B<-c> I<credential>, B<--credential>=I<credential>

    use this key for authentication when using remoteurl

=item B<-u> I<url>, B<--url>=I<url>

    request this url. Url can be shortened and the
    leading /thruk/cgi-bin/ can be stripped.

=back

=head1 RETURN VALUE

thruk returns 0 on success or 1 otherwise

=head1 EXAMPLES

export the event log as excel file:

  %> thruk -a thrukadmin -u 'showlog.cgi?view_mode=xls' > eventlog.xls

export all services into an excel file:

  %> thruk -a thrukadmin -u 'status.cgi?view_mode=xls&host=all' > allservices.xls

export all services into an excel file:

  %> thruk -a thrukadmin -u 'avail.cgi?host=all&timeperiod=last7days&csvoutput=1' > all_host_availability.csv

=head1 AUTHOR

2012, Sven Nierlein, <sven@nierlein.de>

=cut
